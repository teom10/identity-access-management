# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pr: none
resources:
 pipelines:
   - pipeline: identity-access-management
     source: identity-access-management-ci
     trigger:
      branches:
      - trunk

pool:
  vmImage: ubuntu-latest

stages:
- stage: Slot
  displayName: 'Slot Deployment'
  jobs:
    - job: notify
      pool: server
      steps:
        - task: InvokeRESTAPI@1
          inputs:
            connectionType: 'connectedServiceName'
            serviceConnection: 'NotifyManualReview'
            method: 'POST'
            headers: |
              {
              "Content-Type":"application/json"
              }
            body: |
              {
                "@context": "https://schema.org/extensions",
                "@type": "MessageCard",
                "themeColor": "0072C6",
                "title": "Custom message from yaml pipeline",
                "text": "Click **Learn More** to learn more about Actionable Messages!",
                "potentialAction": [
                  {
                    "@type": "ActionCard",
                    "name": "Send Feedback",
                    "inputs": [
                      {
                        "@type": "TextInput",
                        "id": "feedback",
                        "isMultiline": true,
                        "title": "Let us know what you think about Actionable Messages"
                      }
                    ],
                    "actions": [
                      {
                        "@type": "HttpPOST",
                        "name": "Send Feedback",
                        "isPrimary": true,
                        "target": "http://..."
                      }
                    ]
                  },
                  {
                    "@type": "OpenUri",
                    "name": "Learn More",
                    "targets": [
                      { "os": "default", "uri": "https://docs.microsoft.com/outlook/actionable-messages" }
                    ]
                  }
                ]
              }
            waitForCompletion: 'false'
        - task: ManualValidation@0
          name: mv
          inputs:
            instructions: 'validate'
    - deployment: slot
      environment: 'IdentityDev'
      displayName: 'Running Deploy'
      strategy:
       runOnce:
         deploy:
          steps:
          - script: |
              echo '$(resources.pipeline.identity-access-management.pipelineID)'
              echo '$(resources.pipeline.identity-access-management.runName)'
              echo $(resources.pipeline.identity-access-management.runID)
              echo $(resources.pipeline.identity-access-management.runURI)
              echo $(resources.pipeline.identity-access-management.sourceBranch)
              echo $(resources.pipeline.identity-access-management.sourceCommit)
              echo $(resources.pipeline.identity-access-management.sourceProvider)
              echo $(resources.pipeline.identity-access-management.requestedFor)
              echo $(resources.pipeline.identity-access-management.requestedForID)

          - script: |
              echo Add other tasks to build, test, and deploy your project.
              ls $(PIPELINE.WORKSPACE)
            displayName: 'Run a multi-line script'

          - download: identity-access-management
            artifact: drop
            patterns: '**/*.zip'
          - script: |
              ls $(PIPELINE.WORKSPACE)
            displayName: 'Run a multi-line script'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Suscripción de Visual Studio Enterprise(9cf87bc8-69fd-42b2-bd98-a7c1adf50f63)'
              appType: 'webAppLinux'
              WebAppName: 'api-eyes'
              deployToSlotOrASE: true
              ResourceGroupName: 'labdevops'
              SlotName: 'pre'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
              RuntimeStack: 'DOTNETCORE|5.0'
    
- stage: Prod
  displayName: 'Prod Deployment'
  jobs:    
    - deployment: prod
      environment: 'IdentityProd'
      displayName: 'Running production deploy'
      strategy:
       runOnce:
        deploy:
         steps:
         - download: identity-access-management
           artifact: drop
           patterns: '**/*.zip'

         - task: AzureRmWebAppDeployment@4
           inputs:
             ConnectionType: 'AzureRM'
             azureSubscription: 'Suscripción de Visual Studio Enterprise(9cf87bc8-69fd-42b2-bd98-a7c1adf50f63)'
             appType: 'webAppLinux'
             WebAppName: 'api-eyes'
             packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
             RuntimeStack: 'DOTNETCORE|5.0'
